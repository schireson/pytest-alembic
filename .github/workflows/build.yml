name: CI
on: 
  push:
  pull_request:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test:
    services:
      postgres:
        image: postgres:11.12
        env:
          POSTGRES_DB: dev
          POSTGRES_USER: user
          POSTGRES_PASSWORD: password
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.9", "3.10", "3.11", "3.12", "3.13"]
        pytest-version: ["7.0.0", "8.3.5"]
        pytest-asyncio-version: ["0.16.0", "0.23.0"]
        sqlalchemy-version: ["2.0.40"]

        exclude:
          # old versions of pytest-asyncio use old pytest hook syntax
          - pytest-version: "8.3.5"
            pytest-asyncio-version: "0.16.0"

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install poetry
        uses: abatilo/actions-poetry@v3.0.1
        with:
          poetry-version: 2.1.3

      - name: Set up cache
        uses: actions/cache@v4
        with:
          path: ~/.cache/pypoetry/virtualenvs
          key: venv-${{ runner.os }}-${{ matrix.python-version }}-${{ matrix.pytest-version }}-${{ matrix.pytest-asyncio-version }}-${{ matrix.sqlalchemy-version }}-${{ hashFiles('**/poetry.lock') }}

      - name: Install dependencies
        run: poetry run make install

      - name: Install specific versions
        run: |
          poetry run pip install 'sqlalchemy~=${{ matrix.sqlalchemy-version }}'
          poetry run pip install 'pytest~=${{ matrix.pytest-version }}'
          poetry run pip install 'pytest-asyncio~=${{ matrix.pytest-asyncio-version }}'

      - name: Run linters
        if: ${{ matrix.python-version != '3.8' }}
        run: poetry run make lint

      - name: Run tests
        run: poetry run make test

      - name: Store test result artifacts
        uses: actions/upload-artifact@v4
        with:
          name: covarage-${{ runner.os }}-${{ matrix.python-version }}-${{ matrix.pytest-version }}-${{ matrix.pytest-asyncio-version }}-${{ matrix.sqlalchemy-version }}-${{ hashFiles('**/poetry.lock') }}
          path: coverage.xml

      - name: Coveralls
        env:
          COVERALLS_FLAG_NAME: run-${{ inputs.working-directory }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          COVERALLS_PARALLEL: true
        run: |
          pip install tomli coveralls
          coveralls --service=github

  finish:
    needs:
      - test
    runs-on: ubuntu-latest
    steps:
      - name: Coveralls Finished
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          pip install tomli coveralls
          coveralls --service=github --finish
